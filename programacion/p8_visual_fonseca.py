# -*- coding: utf-8 -*-
"""P8_VISUAL_FONSECA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kEIj9274YQPQQb2nQY0CcRcgoXsiRSY_
"""

import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib

years = range(2000, 2012)
apples = [0.895, 0.91, 0.919, 0.926, 0.929, 0.931, 0.934, 0.936, 0.937, 0.9375, 0.9372, 0.939]
oranges = [0.962, 0.941, 0.930, 0.923, 0.918, 0.908, 0.907, 0.904, 0.901, 0.898, 0.9, 0.896, ]
plt.figure(figsize=(12, 6))
matplotlib.rcParams['font.size'] = 20
matplotlib.rcParams['figure.figsize'] = (9, 5)
matplotlib.rcParams['figure.facecolor'] = '#00000001'
sns.set_style("darkgrid")
fmt = 's-b'
plt.plot(years, apples, fmt);
plt.plot(years, oranges, 'o--r');
plt.xlabel('Año')
plt.ylabel('Rendimiento (toneladas por hectárea)');
plt.title("Rendimiento de los campos en Baja California")
plt.legend(['Manzanas', 'Naranjas'])

plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Load data into a Pandas dataframe
flowers_df = sns.load_dataset("iris")
print (flowers_df)
print (flowers_df.species.unique())

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
sns.scatterplot(x='sepal_length', y='sepal_width', hue='species', s=100, data=flowers_df);

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
plt.hist(flowers_df.sepal_width);

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
plt.hist(flowers_df.sepal_width, bins=3);

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
plt.hist(flowers_df.sepal_width, bins=np.arange(2, 6, 0.25));

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
plt.hist(flowers_df.sepal_width, bins=[1, 3, 4, 4.5]);

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
setosa_df = flowers_df[flowers_df.species == 'setosa']
versicolor_df = flowers_df[flowers_df.species == 'versicolor']
virginica_df = flowers_df[flowers_df.species == 'virginica']
plt.hist(setosa_df.sepal_width, alpha=0.4, bins=np.arange(2, 5, 0.25));
plt.hist(versicolor_df.sepal_width, alpha=0.4, bins=np.arange(2, 5, 0.25));
plt.hist(virginica_df.sepal_width, alpha=0.4, bins=np.arange(2, 5, 0.25));

plt.figure(figsize=(12, 6))
plt.title('Dimensiones de Sepalo')
setosa_df = flowers_df[flowers_df.species == 'setosa']
versicolor_df = flowers_df[flowers_df.species == 'versicolor']
virginica_df = flowers_df[flowers_df.species == 'virginica']
plt.hist([setosa_df.sepal_width, versicolor_df.sepal_width, virginica_df.sepal_width],
  bins=np.arange(2, 5, 0.25),
  stacked=True);

plt.legend(['Setosa', 'Versicolor', 'Virginica']);

import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib

years = range(2000, 2006)
apples = [0.35, 0.6, 0.9, 0.8, 0.65, 0.8]
oranges = [0.4, 0.8, 0.9, 0.7, 0.6, 0.8]
plt.figure(figsize=(12, 6))
matplotlib.rcParams['font.size'] = 20
matplotlib.rcParams['figure.figsize'] = (9, 5)
matplotlib.rcParams['figure.facecolor'] = '#00000000'
sns.set_style("darkgrid")
plt.bar(years, oranges);
plt.bar(years, oranges, bottom=apples);
plt.xlabel('Año')
plt.ylabel('Rendimiento (toneladas por hectárea)');
plt.title("Rendimiento de los campos en Baja California")
plt.legend(['Manzanas', 'Naranjas'])

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
tips_df = sns.load_dataset("tips");
print(tips_df)

sns.barplot(x='day', y='total_bill', data=tips_df);

sns.barplot(x='day', y='total_bill', hue='sex', data=tips_df);

sns.barplot(x='total_bill', y='day', hue='sex', data=tips_df);

# Chart title
plt.title("Daily Total Bill")
# Draw a nested boxplot to show bills by day and time
sns.boxplot(x=tips_df.day,

y=tips_df.total_bill,
hue=tips_df.smoker);

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
flights_df = sns.load_dataset("flights").pivot(index="month", columns="year", values="passengers")
print(flights_df)

flights_df = sns.load_dataset("flights").pivot(index="month", columns="year", values="passengers")
print(flights_df)
plt.title("Número de pasajeros (1000s)")
sns.heatmap(flights_df);

flights_df = sns.load_dataset("flights").pivot(index="month", columns="year", values="passengers")
plt.title("Número de pasajeros (1000s)")
sns.heatmap(flights_df, fmt="d", annot=True, cmap='Blues');

flowers_df = sns.load_dataset("iris")
plt.figure(figsize=(12, 6))
plt.title('Flores')
sns.kdeplot(x=flowers_df.sepal_length,
  y=flowers_df.sepal_width,
  shade=True,
  shade_lowest=False);

flowers_df = sns.load_dataset("iris")
plt.figure(figsize=(12, 6))
plt.title('Flores')
setosa = flowers_df[flowers_df.species ==
'setosa']
virginica = flowers_df[flowers_df.species ==
'virginica']
plt.title("Flowers (Setosa & Virginica)")
sns.kdeplot(x=setosa.sepal_length,
  y=setosa.sepal_width,
  shade=True, cmap='Reds',
  shade_lowest=False)

sns.kdeplot(x=virginica.sepal_length,
  y=virginica.sepal_width,
  shade=True, cmap='Blues',
  shade_lowest=False);

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from PIL import Image
img = Image.open('/content/gato.jpg')
img_array = np.array(img)
plt.imshow(img);

img = Image.open('/content/gato.jpg')
img_array = np.array(img)
plt.grid(False)
plt.title('A data science meme')
plt.axis('off')
plt.imshow(img_array[125:325,105:305]);

import matplotlib.pyplot as plt  # Importa matplotlib para la creación de gráficos
import seaborn as sns  # Importa seaborn para la creación de gráficos estadísticos
import numpy as np  # Importa numpy para operaciones numéricas

# Crea una figura y una cuadricula de subgraficos de 2 filas y 3 columnas con el tamaño adecuado
fig, axes = plt.subplots(2, 3, figsize=(16, 8))

# Primer subgrafico - Gráfico de lineas de rendimiento de cultivos
axes[0,0].plot(years, apples, 's-b')  # Plotea los datos de manzanas (puntos cuadrados y línea azul)
axes[0,0].plot(years, oranges, 'o--r')  # Plotea los datos de naranjas (circulos y línea roja discontinua)
axes[0,0].set_xlabel('Year')  # Etiqueta del eje X
axes[0,0].set_ylabel('Yield (tons per hectare)')  # Etiqueta del eje Y
axes[0,0].legend(['Apples', 'Oranges'])  # Añade una leyenda
axes[0,0].set_title('Crop Yields in Kanto')  # Título del subgrafico

# Segundo subgrafico - Gráfico de dispersión de longitud y ancho de sepalo
axes[0,1].set_title('Sepal Length vs. Sepal Width')  # Título del subgrafico
sns.scatterplot(
    x=flowers_df.sepal_length,  # Datos del eje X
    y=flowers_df.sepal_width,  # Datos del eje Y
    hue=flowers_df.species,  # diferencia por especie
    s=100,  # Tamaño de los puntos
    ax=axes[0,1]  # Subgrafico a usar
)

# Tercer subgrafico: Histograma de la distribución del ancho de sepalo
axes[0,2].set_title('Distribution of Sepal Width')  # Titulo del subgrafico
axes[0,2].set_xlabel('Year')  # Etiqueta del eje X
axes[0,2].set_ylabel('Yield (tons per hectare)')  # Etiqueta del eje Y
axes[0,2].hist(
    [setosa_df.sepal_width, versicolor_df.sepal_width, virginica_df.sepal_width],  # Datos a plotear
    bins=np.arange(2, 5, 0.25),  # rango y tamaño de los bins
    stacked=True  # Histograma apilado
)
axes[0,2].legend(['Setosa', 'Versicolor', 'Virginica'])  # Añade una leyenda

# Cuarto subgrafico: Grafico de barras de cuentas de restaurante
axes[1,0].set_title('Restaurant bills')  # Titulo del subgrafico
sns.barplot(
    x='day',  # Datos del eje X (días)
    y='total_bill',  # Datos del eje Y (cuenta total)
    hue='sex',  # Diferencia por género
    data=tips_df,  # DataFrame de datos
    ax=axes[1,0]  # Subgráfico a usar
)

# Quinto subgráfico - Mapa de calor del trafico aéreo
axes[1,1].set_title('Flight traffic')  # Titulo del subgráfico
sns.heatmap(
    flights_df,  # DataFrame de datos
    cmap='Blues',  # Mapa de colores
    ax=axes[1,1]  # Subgrafico a usar
)

# Sexto subgrafico: Imagen
axes[1,2].set_title('Data Science meme')  # Titulo del subgrafico
axes[1,2].imshow(img)  # Muestra la imagen
axes[1,2].grid(False)  # Desactiva la cuadricula
axes[1,2].set_xticks([])  # Quita las marcas del eje X
axes[1,2].set_yticks([])  # Quita las marcas del eje Y

# Ajusta el espaciado entre subgraficos
plt.tight_layout(pad=2)